/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head);
};


//My first solution: Hashmap
bool Solution::hasCycle(ListNode *head){
    if (head == nullptr) return(false);
    unordered_map<ListNode *,int> map;
    
    while(head!=nullptr){
        if (map.find(head) != map.end())return(true);
        else{
            map[head] = head->val;
            head = head->next;
        }
    }
    return(false);
}