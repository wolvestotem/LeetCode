/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool myhasCycle(ListNode *head);
    bool hasCycle(ListNode *head);
};


//Discussion Solution
bool Solution::hasCycle(ListNode *head){
    if(head == nullptr) return(false);
    ListNode *slow;
    ListNode *fast;
    slow = head;
    fast = head->next;
    
    while(fast!=nullptr && fast->next!=nullptr){
        if (fast == slow) return(true);
        fast = fast->next->next;
        slow = slow->next;
    }
    return(false);
}