class Solution {
public:
    int calPoints(vector<string>& ops);
};

int Solution::calPoints(vector<string>& ops){
    if(ops.empty()) return(0);
    stack<int> st;
    int result = 0;
    
    for (int i=0; i< ops.size(); i++){
        int pre = 0; 
        int ppre = 0;
        if(isdigit(ops[i][0]) || ops[i][0]=='-'){
            st.push(stoi(ops[i]));
        }
        else if(ops[i][0] == 'D' && !st.empty()){
            st.push(st.top()*2);
        }
        else if(ops[i][0]=='+' && !st.empty()){
            pre = st.top();
            st.pop();
            if(!st.empty()){
                ppre = st.top();
            }
            st.push(pre);
            st.push(pre+ppre);
        }
        else if(ops[i][0]=='C' && !st.empty())
            st.pop();
    }
    while(!st.empty()){
    result+=st.top();
    st.pop();
    }
    return(result);
}
